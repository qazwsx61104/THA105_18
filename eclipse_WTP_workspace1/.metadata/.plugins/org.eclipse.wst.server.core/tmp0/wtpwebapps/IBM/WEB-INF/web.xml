<?xml version="1.0" encoding="ISO-8859-1"?>

<!-- 以下為 Servlet2.3 、 Servlet2.4 、 Servlet2.5 、 Servlet3.0 、 Servlet3.1 、 Servlet4.0 各個Servlet版本的部署描述檔 web.xml 的頂層標籤 -->

<!--
<!DOCTYPE web-app
    PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
    "http://java.sun.com/dtd/web-app_2_3.dtd">
<web-app>
-->


<!--
<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee
                      http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
  version="2.4">
-->
   

<!--  
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
                      http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
  version="2.5">
-->


<!-- 
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
                      http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
  version="3.0"
  metadata-complete="false">
-->


<!-- 
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
                      http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
  version="3.1"
  metadata-complete="false">
-->  


<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
                      http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
  version="4.0"
  metadata-complete="false">


    <!-- <request-character-encoding>Big5</request-character-encoding> -->
    <!-- 使用資料庫連線池 DataSource-JNDI的設定 -->
	  <resource-ref>
		    <description>DB Connection</description>
		    <res-ref-name>jdbc/TestDB</res-ref-name>
		    <res-type>javax.sql.DataSource</res-type>
		    <res-auth>Container</res-auth>
	  </resource-ref>


    <servlet>                           <!-- 已經無法以註冊名稱(http://localhost:8081/IBM/servlet/hi)的方式執行,因為Invoker servlet的功能在Tomcat 7.x 已經被移除 -->
        <servlet-name>hi</servlet-name>
        <servlet-class>HelloWorld</servlet-class>
    </servlet>
                         
    <servlet-mapping>                   <!-- 明確對應 http://localhost:8081/IBM/hello.html -->
        <servlet-name>hi</servlet-name>
        <url-pattern>/hello.html</url-pattern>
    </servlet-mapping>
    
    <servlet-mapping>                   <!-- 前置路徑對應 http://localhost:8081/IBM/hello.html/xxxxx -->
        <servlet-name>hi</servlet-name>
        <url-pattern>/hello.html/*</url-pattern>
    </servlet-mapping>
    
    <servlet-mapping>                   <!-- 延伸檔名對應 http://localhost:8081/IBM/xxx/yyy/zzz.mm-->
        <servlet-name>hi</servlet-name>
        <url-pattern>*.mm</url-pattern>
    </servlet-mapping>
    
    
    <!-- HelloWorld的第二個註冊名稱與mapping -->
    <servlet>
		    <servlet-name>HelloWorld</servlet-name>
		    <servlet-class>HelloWorld</servlet-class>
	  </servlet>
	  <servlet-mapping>
		    <servlet-name>HelloWorld</servlet-name>
		    <url-pattern>/HelloWorld</url-pattern>
	  </servlet-mapping>
    
    
    <!-- Hello的註冊名稱與mapping -->
    <servlet>
		    <servlet-name>Hello</servlet-name>
		    <servlet-class>Hello</servlet-class>
	  </servlet>
	  <servlet-mapping>
		    <servlet-name>Hello</servlet-name>
		    <url-pattern>/Hello</url-pattern>
	  </servlet-mapping>
	  
	  

<!-- HTTP身份驗證-Basic  HTTP Basic Authentication  , 【username 為 tomcat ; password 為 tomcat】【可查看tomcat-users.xml】-->
<!--
	  <security-constraint>
        <web-resource-collection>
            <web-resource-name>
                SecretProtection
            </web-resource-name>
            <url-pattern>
                /*
            </url-pattern>
            
            <http-method>
                GET
            </http-method>
            <http-method>
                POST
            </http-method>
        </web-resource-collection>
        <auth-constraint>
            <role-name>
                tomcat
            </role-name>
        </auth-constraint>
    </security-constraint>

    <login-config>
        <auth-method>
            BASIC
        </auth-method>                                               
        <realm-name>                                                 
            Default
        </realm-name>                                                
    </login-config>                                                  

    <security-role>
        <role-name>
            tomcat
        </role-name>
    </security-role>
-->
    
    
<!-- error-page 錯誤網頁 -->
<!--
    <error-page>
        <error-code>
            400
        </error-code>
        <location>
            /error.html
        </location>
    </error-page>
    
    <error-page>
        <error-code>
            404
        </error-code>
        <location>
            /error.html
        </location>
    </error-page>

    <error-page>
        <error-code>
            500
        </error-code>
        <location>
            /error.html
        </location>
    </error-page>
   
    <error-page>
        <exception-type>
            javax.servlet.ServletException
        </exception-type>
        <location>
            /error.html
        </location>
    </error-page>
-->
    
</web-app>


<!-- Servlet 3.0 開始的部署描述檔 web.xml 的頂層標籤 有一個 metadata-complete 屬性，該屬性指定當前的部署描述檔 web.xml 是否是完全的。 -->
<!-- 預設為false -->
<!-- 如果設置為 true，則在部署時將只依賴 web.xml，將忽略所有的Anotation註解（同時也會跳過 web-fragment.xml 的掃瞄，亦即禁用可插性支持）-->
<!-- 如果在web.xml、Anotation、web-fragment.xml中所設定的Servlet有同名的註冊名稱，則以web.xml中的設定為主（順序為web.xml -> Anotation -> web-fragment.xml）-->